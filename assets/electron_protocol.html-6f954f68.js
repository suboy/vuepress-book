import{_ as n,o as s,c as a,f as t}from"./app-470db377.js";const p={},e=t(`<p>在ready之前，将自定义schema注册为标准协议：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>protocol<span class="token punctuation">.</span><span class="token function">registerSchemesAsPrivileged</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">scheme</span><span class="token operator">:</span> scheme<span class="token punctuation">,</span>
    <span class="token literal-property property">privileges</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// bypassCSP: true,</span>
        <span class="token literal-property property">standard</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secure</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>createWindow时defaultSession下注册schema并设置回调函数，返回本地文件的内容：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>session<span class="token punctuation">.</span>defaultSession<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span><span class="token function">registerBufferProtocol</span><span class="token punctuation">(</span>scheme<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;registerBufferProtocol&#39;</span><span class="token punctuation">,</span> request<span class="token punctuation">)</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mimeType</span><span class="token operator">:</span> <span class="token string">&#39;text/html&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;h5&gt;register Response&lt;/h5&gt;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
session<span class="token punctuation">.</span>defaultSession<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span><span class="token function">interceptBufferProtocol</span><span class="token punctuation">(</span>scheme<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">details<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;interceptBufferProtocol&#39;</span><span class="token punctuation">,</span> details<span class="token punctuation">)</span>
    <span class="token function">getFileBuffByUrl</span><span class="token punctuation">(</span>details<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>defaultSession拦截网络请求重定向到本地协议schema：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>session<span class="token punctuation">.</span>defaultSession<span class="token punctuation">.</span>webRequest<span class="token punctuation">.</span><span class="token function">onBeforeRequest</span><span class="token punctuation">(</span>filter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">details<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;onBeforeRequest&#39;</span><span class="token punctuation">,</span> details<span class="token punctuation">)</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">cancel</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token literal-property property">redirectURL</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scheme<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">://www?name=hbyd5_youziyin</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找不到直接拦截请求返回本地文件的electron接口，必须要绕一圈，可能跟Chromium的渲染库有关。</p>`,7),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","electron_protocol.html.vue"]]);export{r as default};
